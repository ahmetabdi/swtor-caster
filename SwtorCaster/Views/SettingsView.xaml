<controls:MetroWindow x:Class="SwtorCaster.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:cal="http://www.caliburnproject.org"
        Icon="../Resources/swtorcaster.ico"
        Width="600"  Height="550"
        SizeToContent="Height">
    <Grid HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical" Grid.Row="0">

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="The maximum number of logged abilitys to display in the ability LoggerService window (recommend between 5 and 7)" 
                    Content="Number of abilities to display:" />
                <Slider x:Name="Items" Minimum="1" IsSelectionRangeEnabled="True" Maximum="20" Width="200" IsSnapToTickEnabled="True" VerticalAlignment="Center" AutoToolTipPlacement="TopLeft" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="The rotation angle in degrees (recommend between -5 and 5). Set to 0 for both for no image rotation." 
                    Content="Image rotate in degrees:" />
                <Slider x:Name="Rotate" Minimum="0" Maximum="45" Width="150" IsSnapToTickEnabled="True" HorizontalAlignment="Center" VerticalAlignment="Center" AutoToolTipPlacement="TopLeft" Margin="0,0,10,0"/>
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="When you exit combat, clear the ability LoggerService window (Good for Ops/Ranked PVP)" 
                       Content="Exiting combat clears the ability window:" />
                <CheckBox x:Name="EnableExitCombatClear" VerticalAlignment="Center" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="After a defined amount of seconds, clear the ability window" 
                       Content="Inactvity clears the ability window:" />
                <CheckBox x:Name="EnableInactivityClear" VerticalAlignment="Center" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="The number of seconds of inactivity before the ability log is cleared"
                       Content="Clear the ability window after seconds of inactivity:" />
                <Slider x:Name="ClearAfterInactivity" Minimum="5" Maximum="30" Width="150" IsSnapToTickEnabled="True" VerticalAlignment="Center" AutoToolTipPlacement="TopLeft" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="Display the ability name next to the icon in the ability window" Content="Enable ability text:" />
                <CheckBox Name="EnableAbilityText" VerticalAlignment="Center" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="Display the ability name next to the icon in the ability window" Content="Enable companion abilities:" />
                <CheckBox Name="EnableCompanionAbilities" VerticalAlignment="Center" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="Display the ability name next to the icon in the ability window"
                       Content="Enable debug logging:" />
                <CheckBox Name="EnableLogging" VerticalAlignment="Center" />
            </StackPanel>

            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,5">
                <Label ToolTip="This should also be set as the Color key in OBS" Content="Ability logger background:" />
                <xctk:ColorPicker 
                    ColorMode="ColorPalette" 
                    Width="Auto" 
                    DisplayColorAndName="False"
                    SelectedColor="{Binding SelectedAbilityBackgroundColor}" />
            </StackPanel>

        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Vertical" VerticalAlignment="Bottom">

            <Label Content="Ability settings" FontWeight="Bold" Margin="10" HorizontalContentAlignment="Center" HorizontalAlignment="Center" />

            <DataGrid ItemsSource="{Binding AbilitySettingViewModels}"
                      ScrollViewer.CanContentScroll="True" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                      AutoGenerateColumns="False" VirtualizingPanel.IsVirtualizing="False" 
                      AlternatingRowBackground="WhiteSmoke" MaxHeight="300" VerticalContentAlignment="Stretch" 
                      HorizontalScrollBarVisibility="Disabled">
                <DataGrid.Columns>

                    <DataGridTemplateColumn Header="Enabled">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Viewbox Margin="-1">
                                    <CheckBox IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Viewbox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="ID" Width="1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         ToolTip="Click the Ability in the Logger window to copy it to Clipboard! Then Ctrl+V into here." />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Border" Width="1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:ColorPicker 
                                    SelectedColor="{Binding Path=Border, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ColorMode="ColorPalette" 
                                    DisplayColorAndName="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Image" Width="1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Height="52" Width="52" Source="{Binding Path=ImageUrl}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Actions" Width="3*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button cal:Action.TargetWithoutContext="{Binding}" Margin="5" 
                                            cal:Message.Attach="AddImage" 
                                            ToolTip="Provide a custom image to use for this Ability."
                                            Width="50" Height="50">
                                        <Rectangle Width="20" Height="20" 
                                                   Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                    <Button cal:Action.TargetWithoutContext="{Binding}" Margin="5" 
                                            cal:Message.Attach="RemoveImage" 
                                            Width="50" Height="50"
                                            ToolTip="Clear the custom image and use the default.">
                                        <Rectangle Width="20" Height="20" 
                                                   Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_app_remove}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                    <Button cal:Action.TargetWithoutContext="{Binding}" 
                                            Width="50" Height="50"
                                            cal:Message.Attach="Delete" 
                                            ToolTip="Delete this row">
                                        <Rectangle Width="25" Height="25"
                                                   Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_cell_row_delete}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Button DockPanel.Dock="Bottom"
                    x:Name="AddAbility" 
                    Margin="0,10" 
                    Content="Add Ability" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Bottom" />
        </StackPanel>

    </Grid>
</controls:MetroWindow>
